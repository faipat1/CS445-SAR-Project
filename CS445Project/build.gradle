plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    id 'war'
	id 'com.bmuschko.tomcat' version '2.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit and Mockito test frameworks
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0', 'org.mockito:mockito-core:3.2.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    
    // Servlet dependencies
    compile 'jakarta.ws.rs:jakarta.ws.rs-api:2.1.6'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.30.1'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.30'
    
    // GSON
    implementation 'com.google.code.gson:gson:2.8.6'
    
    //Tomcat
    def tomcatVersion = '9.0.31'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
    
}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

test {
    useJUnitPlatform()
}